#!/bin/bash
# wait to make sure shares are mounted
sleep 60
# mount local backup drive
# mount /mnt/backup1/
# get current date
DATE=$(date +%Y-%m-%d-%H%M%S)
# DATE=$(date +%Y-%m-%d)
# how many backups are there?
COUNT_1=$(ls -l /mnt/nas/backup/Bachelorarbeit/ | grep -v ^d | wc -l)
COUNT_DB=$(ls -l /home/jonas/Dropbox/ | grep -v ^d | wc -l)
# COUNT_2=$(ls -l /mnt/backup1/NASVolume2/backup/Bachelorarbeit/ | grep -v ^d | wc -l)
# maximum number of backups
MAX_COUNT="15"
# directory to backup
SOURCE="/mnt/nas/Studium/ohm/VT8/Bachelorarbeit"
# directory to backup to
BACKUP_DIR_1="/mnt/nas/backup/Bachelorarbeit"
BACKUP_DIR_DB="/home/jonas/Dropbox"
# ACKUP_DIR_2="/mnt/backup1/NASVolume2/backup/Bachelorarbeit"

# pfad sollte nicht mit "/" enden!
# Dies ist nur ein Beispiel - bitte an eigene Bedürfnisse anpassen.
# Man muß schreibberechtigt im entsprechenden Verzeichnis sein.
#BACKUP_DIR_1="/mnt/backup"

# Hier Verzeichnisse auflisten, die gesichert werden sollen.
# Dies ist nur ein Beispiel - bitte an eigene Bedürfnisse anpassen.
# Bei Verzeichnissen, für die der User keine durchgehenden Leserechte hat (z.B. /etc) sind Fehler vorprogrammiert.
# Pfade sollte nicht mit "/" enden!
#SOURCE="$HOME/bin $HOME/.gaim "

  if [ "$COUNT_1" -ge "$MAX_COUNT" ]; then
    unset -v oldest
    for file in $BACKUP_DIR_1/*; do
      [[ -z $oldest || $file -ot $oldest ]] && oldest=$file;
    done;
    rm $oldest
  fi;

  tar -cjpf $BACKUP_DIR_1/backup-$DATE.tar.bz2 $SOURCE > /dev/null 2>&1;
  
# Selbes Spielchen nochmal für die Dropbox
  if [ "$COUNT_DB" -ge "$MAX_COUNT" ]; then
    unset -v oldest
    for file in $BACKUP_DIR_DB/*; do
      [[ -z $oldest || $file -ot $oldest ]] && oldest=$file;
    done;
    rm $oldest
  fi;

  gpg -r "Jonas Vogler" -o $BACKUP_DIR_DB/backup-$DATE.tar.bz2.gpg -e $BACKUP_DIR_1/backup-$DATE.tar.bz2
